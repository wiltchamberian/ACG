prog : stmts ;
stmts : (stmt)* ;
stmt: def
      | struct
      | func
      | assign ';'
      | expr ';'
      | if
      | for;
def : 
      'var' Identifier Identifier ';'
      | 'var' Identifier '=' expr ';' ;
struct : 
      'struct' Identifier '{' (member)* '}' ;
member :
      Identifier Identifier ';' ;
func:   
      'fn' Identifier '(' ')' '{' stmts '}'
      | 'fn' Identifier '(' param (',' param)* ')' '{' stmts '}';
param : Identifier Identifier
      | Identifier ;
expr:   expr '+' term { Add(v[0],v[2])  }
        | expr '-' term { Sub(v[0], v[2])}
        | term ;
term:   term '*' atom { Mul(v[0], v[2])}
        | term '/' atom { Div(v[0] , v[2])}
        | atom;
atom:   Identifier 
        | Number
        | '(' expr ')';
assign: 
        Identifier '=' expr
        | Identifier '+=' expr
        | Identifier '-=' expr
        | Identifier '*=' expr
        | Identifier '/=' expr;
if: 
        'if' expr '{' stmts '}' ;
for: 
        'for' stmt ';' expr ';' expr '{' stmts '}' ;